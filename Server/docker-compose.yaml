networks:
  server-network:
    ipam:
      config:
        - subnet: 172.128.0.0/24

services:
  ssh-holder:
    container_name: ssh-holder

    build:
      context: ./rssh
      dockerfile: Dockerfile

    depends_on:
      - db

    ports:
      - "443:443" # HTTPS
      - "2222:22" # SSH port forwarded to 2222 on host

    labels:
      - "traefik.http.routers.ssh.rule=Host(`ssh.bourbabax.com`)"
      - "traefik.http.routers.ssh.entrypoints=ssh-secure"
      - "traefik.http.services.ssh.loadbalancer.server.port=443"

    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/index.html:/var/www/html/index.html
      - ./logs/nginx:/var/log/nginx

    networks:
      server-network:
        ipv4_address: 172.128.0.2

  db:
    build:
      context: ./database
      dockerfile: Dockerfile

    container_name: bourbabax-db

    volumes:
      - ./database/data:/var/lib/mysql
      - ./database:/app

    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

    ports:
      - "3308:3306"

    networks:
      server-network:
        ipv4_address: 172.128.0.3

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: bourbabax-phpmyadmin
    depends_on:
      - db
    ports:
      - "8081:80"

    environment:
      PMA_HOST: db
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}

    networks:
      server-network:
        ipv4_address: 172.128.0.4

  debian:
    build:
      context: ./private-airnet
      dockerfile: Dockerfile
    container_name: bourbabax-private-airnet
    depends_on:
      - db
    ports:
      - "7880:7880"
    networks:
      server-network:
        ipv4_address: 172.128.0.5

  # api:
  #   container_name: bourbabax-api
  #   restart: always
  #   build:
  #     context: ./api
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - db
  #   ports:
  #     - "3000:8000"
  #   volumes:
  #     - ./api:/app
  #   labels:
  #     - "traefik.http.routers.web.rule=Host(`airnet-api.bourbabax.com`)" 

  traefik:
    image: traefik:v3.2  # Remplacer par la version de Traefik souhaitée
    command:
      - "--api.insecure=true"          # Activer l'API de Traefik (non sécurisé)
      - "--providers.docker=true"      # Activer le provider Docker pour Traefik
      - "--entrypoints.web.address=:80" # Écouter sur le port 80
    ports:
      - "80:80"         # Trafic HTTP
      - "8080:8080"     # Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"  # Permet à Traefik de communiquer avec Docker
